extends layout
block customhead
    link(rel="stylesheet", href="/css/search_page.css")
    link(rel="stylesheet", href="/css/tablesorter.theme.blue.css")
    link(rel="stylesheet", href="/css/fullcalendar.css")
    link(rel="stylesheet", href="/css/timegrid.css")
    script(src='/js/tablesorter.js')
    script(src="/js/pagination.js")
    script(src='/js/chart.js')
    script(src='/js/moment.js')
    script(src='/js/search.js')
    script(src='/js/ajax.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/core/main.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/daygrid/main.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/timegrid/main.js')
    script.
        var maxPage = !{max_page || 1} - 1;
    
block content
    
    .container
        .row
            .col-md-12
                h1(style="margin-bottom:20px;" ).center='Course Search'
        .row 
            .col
            .col-md-6
                form(method='GET' action='/search')   
                    .row
                        .col
                        .col-md-5
                            .form-group
                                label(for='semester', style= "margin-right:10px;") Search Courses From
                                select#semester.form-control(type='text', placeholder='' name='term_id')
                                    - var marked = false
                                    each term,i in terms
                                        if selected_term == term._id
                                            option(value=term._id, selected)=term.name
                                            - marked = true
                                        else if i==terms.length-1 && !marked
                                            option(value=term._id, selected)=term.name
                                        else
                                            option(value=term._id)=term.name
                        .col
                    .row
                        .col
                        .col-md-4
                            .form-group.form-inline
                                label(for='subject') Subject:
                                input#subject.form-control(type='text', placeholder='eg. ECE' name='subject' value=input.subject)
                        .col
                        .col-md-4
                            .form-group.form-inline
                                label(for='catalog_number') Class Number:
                                input#catalog_number.form-control(type='text', placeholder='eg. 2330' name='catalog_number' value=input.catalog_number)
                        .col
                    .row
                        .col
                        .col-md-4
                            .form-group.form-inline
                                label(for='classTitle') Class Title:
                                input#classTitle.form-control(type='text', placeholder='eg. Digital Logic Design' name='classTitle' value=input.title)
                        .col
                        .col-md-4
                            .form-group.form-inline
                                label(for='instructor') Instructor:
                                input#instructor.form-control(type='text', placeholder='eg. Dugan' name='instructor' value=input.instructor)
                        .col
                    .row
                        .col
                        .col-md-4
                            .form-group
                                input#days(type="hidden" name="days" value=input.days)
                                label#Mo.uva-checkbox.dayinput Monday
                                    if(input.days && input.days.indexOf("Mo") > -1)
                                        input(type="checkbox" checked)
                                    else
                                        input(type="checkbox")
                                    span.uva-checkmark
                                label#Tu.uva-checkbox.dayinput Tuesday
                                    if(input.days && input.days.indexOf("Tu") > -1)
                                        input(type="checkbox" checked)
                                    else
                                        input(type="checkbox")
                                    span.uva-checkmark
                                label#We.uva-checkbox.dayinput Wednesday
                                    if(input.days && input.days.indexOf("We") > -1)
                                        input(type="checkbox" checked)
                                    else
                                        input(type="checkbox")
                                    span.uva-checkmark
                                label#Th.uva-checkbox.dayinput Thursday
                                    if(input.days && input.days.indexOf("Th") > -1)
                                        input(type="checkbox" checked)
                                    else
                                        input(type="checkbox")
                                    span.uva-checkmark
                                label#Fr.uva-checkbox.dayinput Friday
                                    if(input.days && input.days.indexOf("Fr") > -1)
                                        input(type="checkbox" checked)
                                    else
                                        input(type="checkbox")
                                    span.uva-checkmark
                                label#Sa.uva-checkbox.dayinput Saturday
                                    if(input.days && input.days.indexOf("Sa") > -1)
                                        input(type="checkbox" checked)
                                    else
                                        input(type="checkbox")
                                    span.uva-checkmark
                                label#Su.uva-checkbox.dayinput Sunday
                                    if(input.days && input.days.indexOf("Su") > -1)
                                        input(type="checkbox" checked)
                                    else
                                        input(type="checkbox")
                                    span.uva-checkmark
                                                                                
                        .col-md-4
                            button.btn.btn-success.wide(type="submit", style="margin-right:10px; margin-bottom:50px;") Find Classes
                        .col
            .col
        .row(style="margin-top:30px;")
            button.btn.bg-uva-blue(style="width:100px;" onClick="previousPage()") Previous
            button.btn.bg-uva-blue.pageselector
            button.btn.bg-uva-blue.pageselector
            button.btn.bg-uva-blue.pageselector
            button.btn.bg-uva-blue.pageselector
            button.btn.bg-uva-blue.pageselector
            button.btn.bg-uva-blue.pageselector
            button.btn.bg-uva-blue.pageselector
            button.btn.bg-uva-blue.pageselector
            button.btn.bg-uva-blue.pageselector
            button.btn.bg-uva-blue.pageselector
            button.btn.bg-uva-blue(style="width:100px;" onClick="nextPage()") Next

    .container
        .row
            .col-md-8#results
                //each section in sections
                    .row
                        .col-md-12(style="margin-top:50px;")
                            h3.bg-uva-orange.course-header.wide
                                b=section.subject + ' ' + section.catalog_number + ' - ' + section.title
                        .col-md-12.course-section-container
                            .row
                                .col-md-12.section-title-thick
                                    p=section.sections[0].desc
                            table.wide
                                tbody.wide
                                    each course in section.sections
                                        tr.wide
                                            td.wide
                                                .row.section-title.course-section-header
                                                    .col-sm-2
                                                        b
                                                            p.sis_id=course.sis_id + ' - ' + course.section
                                                    .col-sm-1
                                                        b
                                                            p=course.type
                                                    .col-sm-5
                                                        b
                                                            each instructor in course.instructors
                                                                p=instructor
                                                    .col-sm-2
                                                        b
                                                            case course.status
                                                                when 'Wait List'
                                                                    span(style="color:#e57200;") Waitlisted
                                                                when 'Open'
                                                                    span(style="color:green") Open 
                                                                default
                                                                    span=course.status
                                                    .col
                                                        b
                                                            if(course.status == 'Wait List')
                                                                p
                                                                    span=course.enrolled + ' / ' + course.enroll_limit + ' | '
                                                                    span(style="color:red")=course.waiting
                                                            else
                                                                p
                                                                    span(style="color:green")=course.enrolled + ' / ' + course.enroll_limit
                                                                    if(course.waiting != 0)
                                                                        span=' | '
                                                                        span(style="color:red")=course.waiting
                                                div
                                                    .row
                                                        .col-md-12.calspot
                                                            p Future home of the calendar
                                                            
                                                    .row
                                                        .col-md-12
                                                            p
                                                            | Grade data is fetched by combining the instructor with the subject and number. It does not factor in labs/discussions or their instructors, etc.
                                                            p Future home of the grade distribution information!
            .col-md-4
                div(id="calendar" style="width:100%;min-width:290px;position:sticky;top:0px;")
                //script.
                    var meeting= [];
                    function name_split(name){
                        name.split("-");
                    };
                    
                    $(':checkbox').on('change',function(){
                        var result_name= name_split(this.name);
                        var theClass= result[parseInt(result_name[0])][parseInt(result_name(1))];
                        
      
                        if(this.checked){
                        
                            for(var i=0;i<theClass.days.split("").length;i++){
                                meeting.push({
                                title: theClass.subject+theClass.catalog_number,
                                start: moment(moment().day(theClass.days.split("")[i]).format("YYYY-MM-DD")+"T"+theClass.meeting_start).format(),
                                end: moment(moment().day(theClass.days.split("")[i]).format("YYYY-MM-DD")+"T"+theClass.meeting_end).format(),
                            });
                            }
                        }
                        else{
                            alert("deselected "+this.name);
                        }
                    });
                    
                    // This is calendar code.
                    document.addEventListener('DOMContentLoaded', function() {
                        var calendarEl = document.getElementById('calendar');
                        var calendar = new FullCalendar.Calendar(calendarEl, {
                          plugins: [ 'timeGrid' ],
                          defaultView: 'timeGridWeek',
                          nowIndicator:true,
                          allDaySlot:false,
                          columnHeaderFormat:{
                              weekday:'short',
                          },
                          minTime:"08:00:00",
                          header:{
                              left:'',
                              center:'',
                              right:'',
                          },
                          events:meeting
                        });

                        calendar.render();
                  });
                  
                  
                  
                    
                  /*
                  $(window).scroll(function(e){ 
                      var $el = $('#calendar'); 
                      var isPositionFixed = ($el.css('position') == 'fixed');
                      if ($(this).scrollTop() > 500 && !isPositionFixed){ 
                          $el.css({'position': 'fixed', 'top': '0px'}); 
                      }
                      if ($(this).scrollTop() < 500 && isPositionFixed){
                          $el.css({'position': 'static', 'top': '0px'}); 
                      } 
                 });
                 */
